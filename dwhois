#!/usr/bin/python

import argparse
import json
import sys

from dwhois.query import DWhois, QueryError
from dwhois.config import user, password, api_base_url, use_cache, cache_url, cache_db, cache_collection

if use_cache:
    from dwhois.cache import Cache

parser = argparse.ArgumentParser()
parser.add_argument('domains', help='list of domains', nargs='*')
parser.add_argument('--json','-j', help='json output', action='store_true')
parser.add_argument('--files','-f', help='file with domains', nargs='*')
parser.add_argument('--check','-c', help='check instead of get', action='store_true')
parser.add_argument('--submit','-s', help='submit domains', action='store_true')
args = parser.parse_args()

if not args.files and not args.domains:
    parser.error('Domains or files required')

dwhois = DWhois(api_base_url, user, password)
if use_cache:
    cache = Cache(cache_url, cache_db, cache_collection)

def format(blob, out):
    print 'Domain: %s' % blob['domain_name']
    print 'Submitted: %d' % blob['submitted']
    print blob['whois']

def action(domain, json_out=False, check=False, submit=False):
    if not check and not submit:
        try:
            if use_cache:
                if domain in cache:
                    data = cache.get(domain)
                else:
                    data = dwhois.get(domain)
                    cache.add(data)
            else:
                data = dwhois.get(domain)

            if json_out:
                if '_id' in data:
                    del data['_id']

                print json.dumps(data)
            else:
                format(data, sys.stdout)
        except QueryError, e:
            print 'Domain: %s' % domain
            print 'ERROR: %s' % e.message
    else:
        if check and submit:
            if (use_cache and not domain in cache) or dwhois.check(domain):
                print 'Submitting: %s' % domain
                dwhois.submit(domain)
        elif check:
            print '%s: %s' % (domain, bool((use_cache and domain in cache) or dwhois.check(domain)))
        else:
            dwhois.submit(domain)

if args.files:
    for fn in args.files:
        if fn == '-':
            f = sys.stdin
        else:
            f = open(fn)

        for line in f:
            domain = line.strip()
            action(domain, args.json, args.check, args.submit)

        f.close()

for domain in args.domains:
    action(domain, args.json, args.check, args.submit)
